declare i32 @printf(i8*, ...)
declare i32 @__isoc99_scanf(i8*, ...)
@strpi = constant [4 x i8] c"%d\0A\00"
@strpd = constant [4 x i8] c"%f\0A\00"
@strs = constant [3 x i8] c"%d\00"
@x = global i32 0
@d = global double 0.0
@w = global double 0.0
@c = global i32 0
define i32 @f() nounwind {
%b = alloca i32
%1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @strs, i32 0, i32 0), i32* %b)
%2 = load i32, i32* %b
%3 = alloca i32
store i32 0, i32* %3
br label %cond1
cond1:
%4 = load i32, i32* %3
%5 = add i32 %4, 1
store i32 %5, i32* %3
%6 = icmp slt i32 %4, %2
br i1 %6, label %true1, label %false1
true1:
%7 = load i32, i32* @c
%8 = add i32 1, %7
store i32 %8, i32* @c
br label %cond1
false1:
%9 = load i32, i32* @x
%10 = icmp ugt i32 %9, 5
br i1 %10, label %true2, label %false2
true2:
%11 = load i32, i32* @x
%12 = load i32, i32* @c
%13 = add i32 %11, %12
%f = alloca i32
store i32 %13, i32* %f
br label %false2
false2:
%14 = load i32, i32* @x
%15 = icmp eq i32 %14, 5
br i1 %15, label %true3, label %false3
true3:
%16 = load i32, i32* %b
%17 = alloca i32
store i32 0, i32* %17
br label %cond4
cond4:
%18 = load i32, i32* %17
%19 = add i32 %18, 1
store i32 %19, i32* %17
%20 = icmp slt i32 %18, %16
br i1 %20, label %true4, label %false4
true4:
%21 = load i32, i32* @x
%22 = load i32, i32* @c
%23 = mul i32 %21, %22
store i32 %23, i32* %f
br label %cond4
false4:
br label %false3
false3:
%24 = load i32, i32* @x
%25 = icmp sgt i32 %24, 5
br i1 %25, label %true5, label %false5
true5:
%26 = load i32, i32* @c
%27 = load i32, i32* @x
%28 = sub i32 %27, %26
store i32 %28, i32* %f
br label %false5
false5:
store i32 5, i32* @x
%29 = load i32, i32* @x
%30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strpi, i32 0, i32 0), i32 %29)
%31 = load i32, i32* %f
ret i32 %31
}
@j = global i32 0
@z = global i32 0
define double @e() nounwind {
%t = alloca double
store double 22.3, double* %t
%1 = load double, double* %t
%2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strpd, i32 0, i32 0), double %1)
%3 = load double, double* @w
%4 = load double, double* @d
%5 = fadd double %3, %4
store double %5, double* @d
%6 = load double, double* @d
%7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strpd, i32 0, i32 0), double %6)
%8 = load double, double* @w
%9 = fadd double 1.1, %8
store double %9, double* @d
%10 = load double, double* @w
%11 = load double, double* @d
%12 = fadd double %10, %11
%e = alloca double
store double %12, double* %e
%13 = load double, double* %e
ret double %13
}
@t = global double 0.0
define i32 @main() nounwind{
%1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @strs, i32 0, i32 0), i32* @x)
store double 2.2, double* @d
store double 1.1, double* @w
store i32 2, i32* @c
store i32 1, i32* @c
store i32 3, i32* @j
%2 = load i32, i32* @j
%3 = alloca i32
store i32 0, i32* %3
br label %cond6
cond6:
%4 = load i32, i32* %3
%5 = add i32 %4, 1
store i32 %5, i32* %3
%6 = icmp slt i32 %4, %2
br i1 %6, label %true6, label %false6
true6:
%7 = load i32, i32* @j
%8 = icmp eq i32 %7, 2
br i1 %8, label %true7, label %false7
true7:
%9 = load i32, i32* @j
%10 = alloca i32
store i32 0, i32* %10
br label %cond8
cond8:
%11 = load i32, i32* %10
%12 = add i32 %11, 1
store i32 %12, i32* %10
%13 = icmp slt i32 %11, %9
br i1 %13, label %true8, label %false8
true8:
%14 = load i32, i32* @c
%15 = add i32 1, %14
store i32 %15, i32* @c
br label %cond8
false8:
br label %false7
false7:
%16 = load i32, i32* @j
%17 = icmp ne i32 %16, 2
br i1 %17, label %true9, label %false9
true9:
%18 = load i32, i32* @c
%19 = mul i32 10, %18
store i32 %19, i32* @c
br label %false9
false9:
br label %cond6
false6:
%20 = call i32 @f()
store i32 %20, i32* @z
store i32 1, i32* @c
%21 = load i32, i32* @c
%22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strpi, i32 0, i32 0), i32 %21)
%23 = load i32, i32* @z
%24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strpi, i32 0, i32 0), i32 %23)
%25 = call double @e()
store double %25, double* @t
%26 = load double, double* @t
%27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @strpd, i32 0, i32 0), double %26)
ret i32 0 }